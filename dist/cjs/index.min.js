/*! *****************************************************************************
 *
 * miski
 * v0.2.2
 *
 * MIT License
 * 
 * Copyright (C) 2021 Peter Hughes<https://www.phugh.es>, all rights reserved.
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 * 
***************************************************************************** */
"use strict";function createMask(e=0n){"number"==typeof e&&(e=BigInt(e));let t=1n<<e;const off=e=>("number"==typeof e&&(e=BigInt(e)),t&=~(1n<<e),t),on=e=>("number"==typeof e&&(e=BigInt(e)),t|=1n<<e,t);return Object.freeze({clear:()=>t=1n<<0n,has:function(e){return"number"==typeof e&&(e=BigInt(e)),(t&e)===t},isOn:e=>("number"==typeof e&&(e=BigInt(e)),0n!==(t&1n<<e)),off:off,on:on,set:(e,t)=>!0===t?on(e):off(e),toArray:()=>t.toString(2).split("").map((e=>parseInt(e,10))),toggle:e=>("number"==typeof e&&(e=BigInt(e)),t^=1n<<e,t),toNumber:()=>Number(t),toString:()=>t.toString(2),value:()=>t})}function deepAssign(e,...t){const n=t.length;if(!t||!n)return e;const r={};for(let e=0;e<n;e++){const n=t[e],o=Object.keys(n),i=o.length;for(let e=0;e<i;e++){const t=o[e],i=Object.getOwnPropertyDescriptor(n,t);i&&i.enumerable&&(r[t]=i)}const s=Object.getOwnPropertySymbols(n);for(let e=0;e<s.length;e++){const t=s[e],o=Object.getOwnPropertyDescriptor(n,t);o&&o.enumerable&&(r[t]=o)}}return Object.defineProperties(e,r),e}function createComponentManager(e){const{maxComponents:t}={...e},n={},r=[];let o=0,i=0;for(let e=t;e>=0;e--)r[e]=i++;return Object.freeze({getComponentById:e=>("number"==typeof e&&(e=BigInt(e)),Object.values(n).find((t=>t.id===e))),getComponentByName:e=>n[e],getComponents:()=>Object.values(n),isComponentRegistered:e=>e.name in n,registerComponent:e=>{if(o>=t)throw new Error("maximum components reached!");if(e.name in n)throw new Error(`component with name "${e.name}" already registered!`);const i=r.pop();if(void 0===i)throw new Error("no available ids!");const s=function createComponent(e){const{entityLimit:t=null,id:n,name:r,properties:o,removable:i=!0}={...e};if(!r||!o||"object"!=typeof o||null==n)throw new Error("malformed component.");return deepAssign(o,e.properties),Object.seal(o),Object.freeze(Object.create({},{entityLimit:{value:t,enumerable:!0},id:{value:n,enumerable:!0},name:{value:r,enumerable:!0},properties:{value:o,enumerable:!0},removable:{value:i,enumerable:!0}}))}({...e,id:i});return n[s.name]=s,o++,s},unregisterComponent:e=>{if(!(e.name in n))throw new Error(`component "${e.name}" is not registered.`);delete n[e.name],r.unshift(e.id);const t=Object.create(e);return delete t.id,o--,t}})}function createEntity(){const e=createMask(),t=`${Date.now().toString(36)}_${Math.random().toString(36).substr(2,9)}`,n={};let r=!0,o=null;const i=Object.create({},{_:{value:n,enumerable:!0},addComponent:{value:r=>{if(r.name in n)return console.warn(`Entity "${t}" already has component "${r.name}".`),!1;try{n[r.name]=deepAssign({},r.properties),e.on(r.id)}catch(e){return console.warn(`Error adding component "${r.name}" to entity "${t}".`,e),!1}return!0}},getArchetype:{value:()=>e.value()},hasComponent:{value:e=>("string"==typeof e?e in n:e.name in n)??!1},isAwake:{value:()=>r},id:{value:t,enumerable:!0},next:{value:e=>(void 0!==e&&(o=e),o)},purge:{value:()=>{!function clearObject(e){return Object.keys(e).forEach((t=>delete e[t])),e}(n),e.clear()}},removeComponent:{value:t=>t.name in n&&(delete n[t.name],e.off(t.id),!0)},sleep:{value:()=>r=!1},wake:{value:()=>r=!0}});return Object.freeze(i)}function createPool(e){const{initialPoolSize:t,maxEntities:n}={...e},r=[];let o;const _create=(e=1)=>{for(let t=0;t<e;t++){if(r.length>=n)throw new Error("The entity pool is full.");const e=createEntity();e.next(o),o=e,r.push(e)}},flush=()=>{r.length=0,o=null,_create(t)};return flush(),Object.freeze({flush:flush,get:()=>{o||_create(.25*t);const e=o;return o=e.next(),e},release:e=>{e.purge(),e.next(o),o=e}})}function createEntityManager(e){const{initialPoolSize:t,maxEntities:n}={...e},r=createPool({initialPoolSize:t,maxEntities:n}),o={},i=new Map;let s=!0;const getEntities=()=>Object.values(o),getEntitiesByMask=(e,t=!1)=>{if(t){const t=i.get(e)??[];return[[e],[...t]]}{const t=new Set,n=new Set;return i.forEach(((r,o)=>{(o&e)===e&&(r.forEach((e=>t.add(e))),n.add(e))})),[[...n],[...t]]}},updateArchetype=(e,t)=>{null!=t&&i.get(t)?.delete(e);const n=e.getArchetype();return i.has(n)?i.get(n)?.add(e):(i.set(n,new Set([e])),s=!0),e};return Object.freeze({areArchetypesDirty:()=>s,cleanedArchetypes:()=>s=!1,createEntity:()=>{const e=r.get();if(!e)throw new Error("no entities left!");return o[e.id]=e,updateArchetype(e),e},destroyEntity:e=>{const t=e.id in o;if(!0===t){delete o[e.id];const t=e.getArchetype();i.get(t)?.delete(e),0===i.get(t)?.size&&(i.delete(t),s=!0),r.release(e)}return t},getEntities:getEntities,getEntitiesByComponents:(...e)=>{const t=function componentsToArchetype(...e){const t=createMask();return e.forEach((e=>t.on(e.id))),t.value()}(...e);return getEntitiesByMask(t)[1]},getEntitiesByMask:getEntitiesByMask,getEntitiesFromMasks:e=>e.reduce(((e,t)=>{const n=i.get(t)??[];return e.push(...n),e}),[]),getEntityById:e=>o[e],rebuildArchetypes:()=>{i.clear();const e=getEntities();for(let t=0;t<e.length;t++)updateArchetype(e[t]);s=!1},updateArchetype:updateArchetype})}const _noop=function(){};function createSystemManager(){const e={},t=[];return Object.freeze({getSystemByIndex:e=>t[e]??void 0,getSystemByName:t=>e[t],getSystems:()=>[...t],isSystemRegistered:t=>t.name in e,moveSystem:(e,n)=>{const r=t.indexOf(e);return-1!==r&&(t.splice(r,1),t.splice(n,0,e),!0)},registerSystem:(n,r)=>{if(n.name in e)throw new Error(`system "${n.name}" is already registered!`);const o=function createSystem(e){const{components:t,exclusive:n=!1,name:r,postUpdate:o=_noop,preUpdate:i=_noop,update:s=_noop}={...e},a=t.reduce(((e,t)=>(e.on(t.id),e)),createMask()).value();let c=!1;return Object.freeze({get enabled(){return c},archetype:a,disable:()=>c=!1,enable:()=>c=!0,exclusive:n,name:r,postUpdate:o,preUpdate:i,update:s})}({...n});return void 0!==r?t.splice(r,0,o):t.push(o),e[o.name]=o,o},unregisterSystem:n=>{if(!(n.name in e))throw new Error(`system "${n.name}" is not registered!`);delete e[n.name],t.splice(t.indexOf(n),1)}})}exports.createWorld=function createWorld(e){const{initialPoolSize:t=64,maxComponents:n=1024,maxEntities:r=1e5}={...e},{areArchetypesDirty:o,cleanedArchetypes:i,createEntity:s,destroyEntity:a,getEntities:c,getEntitiesByComponents:m,getEntitiesByMask:l,getEntitiesFromMasks:p,getEntityById:u,rebuildArchetypes:d,updateArchetype:y}=createEntityManager({initialPoolSize:t,maxEntities:r}),{getComponentById:g,getComponentByName:f,getComponents:h,isComponentRegistered:b,registerComponent:E,unregisterComponent:v}=createComponentManager({maxComponents:n}),{getSystemByIndex:w,getSystemByName:S,getSystems:C,isSystemRegistered:O,moveSystem:B,registerSystem:j,unregisterSystem:x}=createSystemManager(),A=s(),I=E({name:"world",properties:{isWorld:!0},entityLimit:1,removable:!1}),M={},addComponentsToEntity=(e,...t)=>{if(!e)throw new Error("no entity provided.");if(!t?.length)throw new Error("no components provided.");const n=t.length;let r;for(r=0;r<n;r++){let n;if(n="string"==typeof t[r]?f(t[r]):t[r],!n)throw new Error(`component ${t[r]} is not registered!.`);if(!e.hasComponent(n)){const t=e.getArchetype();e.addComponent(n),y(e,t)}}return e};return addComponentsToEntity(A,I),Object.freeze({addComponentsToEntity:addComponentsToEntity,createEntity:s,destroyEntity:a,entity:A,getComponentById:g,getComponentByName:f,getComponents:h,getEntities:c,getEntitiesByComponents:m,getEntitiesByMask:l,getEntityById:u,getSystemByIndex:w,getSystemByName:S,getSystems:C,isComponentRegistered:b,isSystemRegistered:O,moveSystem:B,postUpdate:e=>{const t=C();for(let n=0;n<t.length;n++){const r=t[n];if(!1!==r.enabled)if(!0!==o()&&r.name in M){const t=M[r.name],n=p(t);r.postUpdate(e,n,r)}else{const[t,n]=l(r.archetype,r.exclusive);M[r.name]=t,r.postUpdate(e,n,r),i()}}},preUpdate:()=>{const e=C();for(let t=0;t<e.length;t++){const n=e[t];if(!1!==n.enabled)if(!0!==o()&&n.name in M){const e=M[n.name],t=p(e);n.preUpdate(t,n)}else{const[e,t]=l(n.archetype,n.exclusive);M[n.name]=e,n.preUpdate(t,n),i()}}},registerComponent:E,registerSystem:j,removeComponentsFromEntity:(e,...t)=>{if(!e)throw new Error("no entity provided.");if(!t?.length)throw new Error("no components provided.");const n=t.length;let r;for(r=0;r<n;r++){let n;if(n="string"==typeof t[r]?f(t[r]):t[r],!n)throw new Error(`component ${t[r]}  is not registered.`);if(e.hasComponent(n)){const t=e.getArchetype();e.removeComponent(n),y(e,t)}}return e},unregisterComponent:v,unregisterSystem:x,update:e=>{const t=C();for(let n=0;n<t.length;n++){const r=t[n];if(!1!==r.enabled)if(!0!==o()&&r.name in M){const t=M[r.name],n=p(t);r.update(e,n,r)}else{const[t,n]=l(r.archetype,r.exclusive);M[r.name]=t,r.update(e,n,r),i()}}}})};
//# sourceMappingURL=index.min.js.map
